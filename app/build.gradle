apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.vwoom.timelapsegallery"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 32
        versionName "1.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }

    testOptions.unitTests {
        includeAndroidResources = true
    }

    buildFeatures {
        viewBinding true
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'

    /* Unit Testing */
    // For local unit tests
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    
    // For coroutines testing
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'

    /* Instrumented Testing */
    // For instrumented testing
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Espresso core
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'
    // For Room DAO / DB testing
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    // For testing room migrations
    androidTestImplementation 'androidx.room:room-testing:2.4.3'
    // For fragment scenario
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2'

    androidTestImplementation 'androidx.fragment:fragment-testing:1.5.2'

    androidTestImplementation 'androidx.test:core:1.4.0'
    // For mocking
    androidTestImplementation 'org.mockito:mockito-core:3.3.3'

    /*
    * Non-Testing Dependencies
    *  */
    // Kotlin extensions
    implementation "androidx.core:core-ktx:1.8.0"

    // Material Design
    implementation 'com.google.android.material:material:1.6.1'

    // Analytics & Crashlytics
    implementation platform('com.google.firebase:firebase-bom:26.2.0') // Import the BoM for the Firebase platform
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Navigation
    def nav_version = "2.5.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Room
    implementation 'androidx.room:room-ktx:2.4.3'
    kapt 'androidx.room:room-compiler:2.4.3'

    // Live data & view model
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // Glide - Image Loading
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    // Exif support
    implementation "androidx.exifinterface:exifinterface:1.3.3"

    // Work manager
    implementation "androidx.work:work-runtime:2.7.1"

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'

    // Flex box Layout for tags
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Retrofit 2 & moshi - Network calls and JSON serialization / deserialization
    def version_moshi = "1.9.2"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.8.1'
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Charting for weather data
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Coroutines adapter for deferred
    def version_kotlin_coroutines = "1.6.1"
    def version_kotlin_coroutines_adapter = "0.9.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_kotlin_coroutines_adapter"

    // Dagger 2 - Dependency Injection
    def dagger_version = "2.40.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // For converting photo sets to GIF format
    // Note: LTS version required to support API level 16+ rather than API level 24+
    //implementation 'com.arthenica:mobile-ffmpeg-full:4.3.1.LTS'
    //implementation 'com.arthenica:ffmpeg-kit-full:4.5'

    // full gpl version needed for lib x264 encoding (for converting images to mp4)
    implementation 'com.arthenica:ffmpeg-kit-full-gpl:4.5.LTS'

    //implementation 'com.arthenica:mobile-ffmpeg-full:4.4.LTS'

    // Timber For Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'
}
